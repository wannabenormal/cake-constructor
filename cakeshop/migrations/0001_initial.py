# Generated by Django 4.0.4 on 2022-04-27 10:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название рекламной акции')),
                ('start_date', models.DateTimeField(auto_now=True, verbose_name='Начало рекламной акции')),
                ('end_date', models.DateTimeField(blank=True, verbose_name='Конец рекламной акции')),
                ('unique_link', models.CharField(max_length=255, verbose_name='Уникальная ссылка-идентификатор для рекламной акции')),
            ],
            options={
                'verbose_name': 'Рекламная акция',
                'verbose_name_plural': 'Рекламные акции',
            },
        ),
        migrations.CreateModel(
            name='Berry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('berry', models.CharField(help_text='Клубника, голубика, ежевика, малина..', max_length=25, verbose_name='Ягода')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Ягода',
                'verbose_name_plural': 'Ягоды',
            },
        ),
        migrations.CreateModel(
            name='Cake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=200, verbose_name='Название торта')),
                ('description', models.CharField(blank=True, help_text='Описание', max_length=200, verbose_name='Описание')),
                ('inscription', models.CharField(blank=True, help_text='Надпись на торте', max_length=50, verbose_name='Надпись')),
                ('berry', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='cake_berry', to='cakeshop.berry', verbose_name='Ягоды')),
            ],
            options={
                'verbose_name': 'Торт',
                'verbose_name_plural': 'Торты',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Имя', max_length=150, verbose_name='Имя')),
                ('email', models.CharField(help_text='username@mail.ru', max_length=200, verbose_name='Почта')),
                ('phonenumber', models.CharField(help_text='+79987651244', max_length=50, verbose_name='Номер телефона')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес заказчика')),
                ('referral', models.ForeignKey(blank=True, max_length=100, on_delete=django.db.models.deletion.CASCADE, to='cakeshop.advertisement', verbose_name='Реклама, по которой перешел пользователь')),
            ],
            options={
                'verbose_name': 'Заказчик',
                'verbose_name_plural': 'Заказчики',
            },
        ),
        migrations.CreateModel(
            name='Decoration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decoration', models.CharField(help_text='Марципан, пекан, фундук, шоколадная крошка ..', max_length=10, verbose_name='Украшение')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Украшение',
                'verbose_name_plural': 'Украшения',
            },
        ),
        migrations.CreateModel(
            name='Height',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.CharField(help_text='Высота торта в этажах (1, 2, 3 и т.д)', max_length=25, verbose_name='Высота')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Этаж торта',
                'verbose_name_plural': 'Этажи торта',
            },
        ),
        migrations.CreateModel(
            name='Shape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape', models.CharField(help_text='Форма торта (круг, шар, четырехмерный куб, бутылка Клейна и т.д)', max_length=25, verbose_name='Форма')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Форма торта',
                'verbose_name_plural': 'Формы тортов',
            },
        ),
        migrations.CreateModel(
            name='Topping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topping', models.CharField(help_text='Шоколадный, ванильный, медовый и т.д', max_length=25, verbose_name='Топпинг')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Топпинг',
                'verbose_name_plural': 'Топпинги',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('В обработке', 'В обработке'), ('Готовится', 'Готовится'), ('Доставлен', 'Доставлен')], db_index=True, max_length=255, verbose_name='Тип')),
                ('price', models.IntegerField(verbose_name='Общая стоимость')),
                ('creation_time', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('delivery_datetime', models.DateTimeField(db_index=True, verbose_name='Дата и время доставки')),
                ('delivery_address', models.CharField(db_index=True, max_length=255, verbose_name='Адрес доставки')),
                ('comment', models.CharField(blank=True, max_length=300, verbose_name='Комментарии')),
                ('is_urgent', models.BooleanField(db_index=True, default=False, verbose_name='Срочный?')),
                ('cake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cake', to='cakeshop.cake', verbose_name='Торт')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to='cakeshop.customer', verbose_name='Заказчик')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.AddField(
            model_name='cake',
            name='decoration',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='cake_decoration', to='cakeshop.decoration', verbose_name='Украшение'),
        ),
        migrations.AddField(
            model_name='cake',
            name='height',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cake_height', to='cakeshop.height', verbose_name='Высота торта в этажах'),
        ),
        migrations.AddField(
            model_name='cake',
            name='shape',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cake_shape', to='cakeshop.shape', verbose_name='Форма торта'),
        ),
        migrations.AddField(
            model_name='cake',
            name='topping',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cake_topping', to='cakeshop.topping', verbose_name='Топпинг'),
        ),
    ]
